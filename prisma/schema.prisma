generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("RAILWAY_MYSQL_URL")
}

//model changed at 17/01/2025
model User {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(50)
  email     String
  password  String   @db.VarChar(255)
  profile   Profile? @relation("UserProfile")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]

  @@unique([email])
}

model Profile {
  id          String   @id @default(uuid())
  image       String?
  fullname    String?  @db.VarChar(100)
  bio         String?  @db.VarChar(500)
  role        Role     @default(USER)
  collections Book[]   @relation("BookCollections")
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User?    @relation("UserProfile", fields: [userId], references: [id])

  @@unique([userId])
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]   @relation("BookCategories")

  @@unique([name])
}

model Book {
  id          String      @id @default(uuid())
  image       String
  title       String      @db.VarChar(50)
  description String      @db.VarChar(600)
  price       Decimal     @db.Decimal(10, 2)
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  content     String      @db.Text
  authorName  String      @db.VarChar(100)
  profileId   String
  profile     Profile?    @relation("BookCollections", fields: [profileId], references: [id])
  orderItems  OrderItem[]
  categories  Category[]  @relation("BookCategories")

  @@index([title])
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  bookId    String
  quantity  Int      @default(1)
  order     Order    @relation(fields: [orderId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Order {
  id            String      @id @default(uuid())
  totalPrice    Decimal     @db.Decimal(10, 2)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orderedUserId String
  orderedUser   User        @relation(fields: [orderedUserId], references: [id])
  orderItems    OrderItem[]
}
