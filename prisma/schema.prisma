generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("RAILWAY_MYSQL_URL")
}
//model changed at 17/01/2025
model User {
  id        Int      @id @default(autoincrement())
  image     String?
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id          Int      @id @default(autoincrement())
  image       String?
  fullname    String
  bio         String   @db.VarChar(500)
  collections Book[]
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Author {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]
}

model Book {
  id          Int         @id @default(autoincrement())
  title       String
  description String      @db.VarChar(600)
  price       Decimal     @db.Decimal(10, 2)
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  content     String      @db.Text
  authorId    Int
  categoryId  Int
  image       String
  author      Author      @relation(fields: [authorId], references: [id])
  category    Category    @relation(fields: [categoryId], references: [id])
  profile     Profile     @relation(fields: [profileId], references: [id])
  profileId   Int
  orderItems  OrderItem[]
}

model OrderItem {
  id       Int @id @default(autoincrement())
  orderId  Int
  bookId   Int
  quantity Int @default(1)

  order     Order    @relation(fields: [orderId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Order {
  id            Int      @id @default(autoincrement())
  orderedUserId Int
  totalPrice    Decimal  @db.Decimal(10, 2)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  orderedUser Profile     @relation(fields: [orderedUserId], references: [id])
  orderItems  OrderItem[]
}
